@using System.Globalization
@using Microsoft.AspNetCore.Localization
@using Microsoft.Net.Http.Headers

@inject IHttpContextAccessor HttpContextAccessor

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link href="_content/Syncfusion.Blazor.Themes/bootstrap5.css" rel="stylesheet" />
    <link rel="stylesheet" href="css/app.css" />
    <link href="css/typography.css" rel="stylesheet">
    <link href="css/highlight.css" rel="stylesheet">
    <link rel="icon" href="/img/blazor.svg" type="image/svg+xml">
    <link rel="icon" type="image/png" href="favicon.png" />
    <link rel="stylesheet" href="_content/Telerik.UI.for.Blazor/css/kendo-theme-default/all.css" />
    <link href="css/telerik-dark-mode.css" rel="stylesheet">
    <link href="css/fundit.css" rel="stylesheet">
    <link href="app.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <script src="js/telerik-theme-toggle.js"></script>
    <HeadOutlet @rendermode="RenderModeForPage" />
</head>

<body class="bg-white dark:bg-black dark:text-white">
    <Routes @rendermode="RenderModeForPage"/>
    <script src="_framework/blazor.web.js"></script>
    <script src="_content/Blazor.Bootstrap/blazor.bootstrap.js"></script>
    <script src="_content/Telerik.UI.for.Blazor/js/telerik-blazor.js"></script>
    <script src="_content/Syncfusion.Blazor.Core/scripts/syncfusion-blazor.min.js" type="text/javascript"></script>
    <script src="_content/BlazorAnimate/blazorAnimateInterop.js"></script>
    <script src="resizeListener.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity=”sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj” crossorigin=”anonymous”></script>
    @*<script>JS.init({ colorScheme:false })</script>*@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script>
        async function exportChartToPdf(chartElementId, filename) {
            const element = document.getElementById(chartElementId);
            if (!element) {
                console.error(`Element with ID ${chartElementId} not found.`);
                return;
            }
            const canvas = await html2canvas(element);
            const imgData = canvas.toDataURL('image/png');

            const { jsPDF } = window.jspdf;
            const pdf = new jsPDF();
            const width = pdf.internal.pageSize.getWidth();
            const height = (canvas.height * width) / canvas.width;
            pdf.addImage(imgData, 'PNG', 0, 10, width, height);
            pdf.save(filename || "chart.pdf");
        }
    </script>

    
    <script src="lib/js/highlight.js"></script>
    <script>hljs.highlightAll()</script>
</body>

</html>

@code {
    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;
    private IComponentRenderMode? RenderModeForPage => HttpContext.Request.Path.StartsWithSegments("/Account")
        ? null
        : new InteractiveServerRenderMode(prerender: false);
    
    protected override void OnInitialized()
    {
        var httpContext = HttpContextAccessor.HttpContext;
        httpContext?.Response.Cookies.Append(
            CookieRequestCultureProvider.DefaultCookieName,
            CookieRequestCultureProvider.MakeCookieValue(new RequestCulture(CultureInfo.CurrentCulture, CultureInfo.CurrentUICulture))
        );
        httpContext!.Response.Headers[HeaderNames.CacheControl] = "no-cache";
    }
}