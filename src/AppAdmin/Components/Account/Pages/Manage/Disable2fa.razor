@page "/Account/Manage/Disable2fa"

@using Microsoft.AspNetCore.Identity
@using AppAdmin.Data

@inject UserManager<User> UserManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<Disable2fa> Logger

<PageTitle>@LocalizationService.StringFromResource("Account-110")</PageTitle>

<Heading3>@LocalizationService.StringFromResource("Account-110")</Heading3>

<div class="max-w-xl">
    <StatusMessage />

    <Alert Type="AlertType.Warning">
        <p class="mb-3">
            <strong>@LocalizationService.StringFromResource("Account-111")</strong>
        </p>
        <p class="mb-3">
            @LocalizationService.StringFromResource("Account-112") <a href="Account/Manage/ResetAuthenticator">@LocalizationService.StringFromResource("Account-113")</a>
        </p>
    </Alert>

    <div class="mt-4">
        <form @formname="disable-2fa" @onsubmit="OnSubmitAsync" method="post">
            <AntiforgeryToken />
            <PrimaryButton Style="ButtonStyle.Red" type="submit">@LocalizationService.StringFromResource("Account-114")</PrimaryButton>
        </form>
    </div>
</div>

@code {
    private User user = default!;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);

        if (HttpMethods.IsGet(HttpContext.Request.Method) && !await UserManager.GetTwoFactorEnabledAsync(user))
        {
            throw new InvalidOperationException("Cannot disable 2FA for user as it's not currently enabled.");
        }
    }

    private async Task OnSubmitAsync()
    {
        var disable2faResult = await UserManager.SetTwoFactorEnabledAsync(user, false);
        if (!disable2faResult.Succeeded)
        {
            throw new InvalidOperationException("Unexpected error occurred disabling 2FA.");
        }

        var userId = await UserManager.GetUserIdAsync(user);
        Logger.LogInformation("User with ID '{UserId}' has disabled 2fa.", userId);
        RedirectManager.RedirectToWithStatus(
            "Account/Manage/TwoFactorAuthentication",
            "2fa has been disabled. You can reenable 2fa when you setup an authenticator app",
            HttpContext);
    }
}
